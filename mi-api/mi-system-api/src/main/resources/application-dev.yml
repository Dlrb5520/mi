spring:
  # nacos配置
  cloud:
    nacos:
      discovery:
        server-addr: ${nacos.url}:8848
        namespace: ${nacos.namespace}
  ## 排除mybatis-plus的自动装载
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

  # 数据源配置
  datasource:
    dynamic:
      hikari:
        ## 数据库连接超时时间,默认30秒，即30000
        connection-timeout: 30000
        ## 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
        max-lifetime: 1800000
        ## 连接池最大连接数，默认是10
        max-pool-size: 15
        ## 最小空闲连接数量
        min-idle: 5
        connection-test-query: select 1
        ## 连接池名称
        pool-name: MiHikariCP
        ## 此属性控制从池返回的连接的默认自动提交行为,默认值：true
        is-auto-commit: true
      primary: base
      datasource:
        base:
          username: root
          password: root
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/electronic?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2b8
  zipkin:
    sender:
      type: rabbit
  sleuth:
    sampler:
      probability: 1
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

## mybatis-plus 配置
mybatis-plus:
  type-aliases-package: mi.system.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    jdbc-type-for-null: null
    #使用Mybatis-plus中的selectMaps方法返回值字段为空不显示的问题
    call-setters-on-nulls: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    banner: false


#token认证
security:
  oauth2:
    resource:
      id: mi-auth-system
      user-info-uri: ${auth.url}
#feign 开启hystrix支持
feign:
  hystrix:
    enabled: true
#hystrix 熔断规则配置
hystrix:
  shareSecurityContext: true
  command:
    default:
      execution:
        tiemout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 10000

      circuitBreaker:
        #在当20秒的时间内，最近50次调用请求，请求错误率超过60%，则触发熔断10秒，期间快速失败。
        requestVolumeThreshold: 50
        errorThresholdPercentage: 60
        sleepWindowInMilliseconds: 10000
      metrics:
        rollingStats:
          timeInMilliseconds: 20000
#ribbon 负载均衡 时间配置
ribbon:
  ReadTimeout:  60000
  ConnectTimeout: 600000

#feign + ribbon 实现负载均衡
mi-system:  #提供服务名称
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule  #负载均衡策略
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule  #负载均衡策略


tx-lcn:
  client:
    manager-address: ${febs-tx-manager}:9527
